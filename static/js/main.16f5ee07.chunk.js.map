{"version":3,"sources":["config/prod.js","components/svg/SvgKaggleMark.js","components/MemberAvatar.js","components/Members.js","views/Projects.js","views/About.js","views/Home.js","components/providers/ConfigProvider.js","components/providers/ThemeProvider.js","views/Header.js","views/Footer.js","components/realestate/RealEstateFormControl.js","components/realestate/HouseSeriesSelect.js","components/realestate/HouseTypeSelect.js","components/realestate/Step.js","components/realestate/GooglePlacesAutocomplete.js","views/realestate/demo/EnterLocation.js","views/realestate/RigaRealEstateMap.js","views/realestate/RigaRealEstateDemo.js","views/realestate/RigaRealEstateApi.js","views/realestate/RigaRealEstateHow.js","views/realestate/RigaRealEstateProject.js","App.js","serviceWorker.js","index.js","config/index.js"],"names":["module","exports","GOOGLE_MAP_API_KEY","SvgKaggleMark","xmlns","viewBox","d","fill","useStyles","makeStyles","theme","root","minWidth","display","flexDirection","alignContent","alignItems","avatar","padding","width","spacing","height","name","margin","marginTop","bio","fontSize","color","icons","justifyContent","icon","MemberAvatar","image","classes","kaggle","github","linkedin","className","Avatar","alt","src","flexWrap","MEMBERS","Members","map","member","key","process","paddingBottom","button","marginRight","marginBottom","project","maxWidth","palette","text","secondary","dummyProject","minHeight","paddingLeft","paddingRight","paddingTop","primary","background","border","title","riga","backgroundImage","backgroundRepeat","backgroundSize","trafficsign","backgroundPosition","Projects","ButtonBase","component","Link","to","Paper","elevation","about","lineHeight","About","textAlign","Home","homeSection","Context","React","createContext","config","useConfig","context","useContext","Error","ConfigProvider","value","children","Provider","createMuiTheme","typography","fontFamily","join","default","main","ThemeProvider","header","justifyItems","borderBottom","identity","logo","logoDark","navigation","Header","Footer","RealEstateFormControl","withStyles","FormControl","HOUSE_SERIES","label","HouseSeriesSelect","onChange","variant","InputLabel","Select","s","MenuItem","HOUSE_TYPES","HouseTypeSelect","t","stepContainer","stepHeader","marginLeft","stepHeaderTitle","stepTitle","stepCompleteIcon","props","complete","fontWeight","Step","hideCompleteIcon","autocompleteService","current","GooglePlacesAutocomplete","setValue","useState","inputValue","setInputValue","options","setOptions","fetchPlacePredictions","useRef","useMemo","throttle","request","callback","getPlacePredictions","useEffect","active","window","google","maps","places","AutocompleteService","RIGA","LatLng","RIGA_CENTER_LATITUDE","RIGA_CENTER_LONGITUDE","Circle","center","radius","input","bounds","getBounds","strictbounds","types","language","results","newOptions","Autocomplete","id","fullWidth","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","noOptionsText","event","newValue","onInputChange","newInputValue","renderInput","params","TextField","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","match","offset","length","Grid","container","item","xs","part","index","style","highlight","Typography","secondary_text","locationContainer","locationButton","placesService","EnterLocation","location","setLocation","canUseGeolocation","setCanUseGeolocation","place","setPlace","navigator","geolocation","fetchPlaceDetails","getDetails","formatCoordinates","coordinate","Math","round","onPositionObtained","position","coords","PlacesService","placeId","place_id","fields","status","PlacesServiceStatus","OK","latitude","geometry","lat","longitude","lng","Button","size","onClick","getCurrentPosition","console","error","controls","textField","predictions","prediction","ai","formatter","Intl","NumberFormat","currency","RigaRealEstateDemo","area","setArea","floor","setFloor","rooms","setRooms","totalFloors","setTotalFloors","condition","houseType","setHouseType","houseSeria","setHouseSeria","district","loading","setLoading","setPredictions","createInputInstance","operation","fetch","method","body","JSON","stringify","instances","then","res","json","result","catch","log","gutterBottom","target","type","toString","parseInt","CircularProgress","format","RigaRealEstateApi","align","Box","m","link","RigaRealEstateHow","href","projectContainer","titleHeader","TabPanel","other","role","hidden","aria-labelledby","p","RigaRealEstateProject","AppBar","Tabs","aria-label","Tab","footer","backgroundColor","App","path","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message","require"],"mappings":"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","file":"static/js/main.16f5ee07.chunk.js","sourcesContent":["module.exports = {\n  GOOGLE_MAP_API_KEY: 'AIzaSyB_xFxo_VBEj2rI21-zA9WIDCsvAlhhaN0',\n};\n","import React from 'react';\n\nexport default function SvgKaggleMark() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 430 450\">\n            <path d=\"M385.708 476.478L254.742 313.713 380.32 192.179c2.334-2.426 1.526-9.433-4.761-9.433h-62.16c-3.145 0-6.288 1.618-9.433 4.761L185.128 307.604V32.738c0-4.491-2.247-6.737-6.738-6.737h-46.618c-4.492 0-6.737 2.246-6.737 6.737v446.433c0 4.491 2.246 6.738 6.737 6.738h46.618c4.491 0 6.738-2.247 6.738-6.738v-97.91l27.666-26.317 99.257 126.294c2.695 3.145 5.839 4.762 9.432 4.762h60.095c3.143 0 4.939-.899 5.389-2.696l-1.259-6.826z\" fill=\"#20beff\"/>\n        </svg>\n    );\n}\n\n","import Avatar from \"@material-ui/core/Avatar\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport SvgKaggleMark from \"./svg/SvgKaggleMark\";\nimport SvgGithubMark from \"./svg/SvgGithubMark\";\nimport SvgLinkedinMark from \"./svg/SvgLinkedinMark\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: '250px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    avatar: {\n        padding: 0,\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n    },\n    name: {\n        padding: 0,\n        margin: 0,\n        marginTop: 5,\n    },\n    bio: {\n        padding: 0,\n        margin: 4,\n        fontSize: 12,\n        color: '#494747',\n    },\n    icons: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n    },\n    icon: {\n        width: 20,\n        height: 20,\n        margin: '0.05rem',\n    },\n}));\n\nexport default function MemberAvatar({name, bio, image, kaggle, github, linkedin}) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Avatar alt={name} src={image} className={classes.avatar} />\n            <p className={classes.name}>{name}</p>\n            <p className={classes.bio}>{bio}</p>\n            {/* <p className={classes.bio}>{bio}</p><div className={classes.icons}>\n                {kaggle && <a href={kaggle} target=\"_blank\"><div className={classes.icon}>\n                    <SvgKaggleMark />\n                </div></a>}\n                {github && <a href={github} target=\"_blank\"><div className={classes.icon}>\n                    <SvgGithubMark />\n                </div></a>}\n                {linkedin && <a href={linkedin} target=\"_blank\"><div className={classes.icon}>\n                    <SvgLinkedinMark />\n                </div></a>}\n            </div>*/}\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MemberAvatar from \"./MemberAvatar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        flexWrap: 'wrap'\n    },\n    avatar: {\n        padding: '1rem',\n    },\n}));\n\nconst MEMBERS = [\n    {\n        name: 'Dmitry Yemelyanov',\n        image: 'sonofaman.jpg',\n        bio: 'Consultant@Forward IT',\n        kaggle: 'https://www.kaggle.com/dmitryyemelyanov',\n        github: 'https://github.com/djemeljanovs',\n        linkedin: 'https://www.linkedin.com/in/djemeljanovs/',\n    },\n    {\n        name: 'Dmitry Trizna',\n        image: 'dtrizna.jpg',\n        bio: 'Penetration Tester, Security Researcher',\n        kaggle: 'https://www.kaggle.com/dmitrijstrizna',\n\n    },\n    {\n        name: 'Cees Roele',\n        image: 'croele.jpg',\n        bio: 'Scrum Master / Data Scientist',\n        kaggle: 'https://www.kaggle.com/ceesroele',\n    },\n    {\n        name: 'Danil Yachmenev',\n        image: 'dyachmenev.jpeg',\n        bio: 'Data Scientist@Particle.One',\n        kaggle: 'https://www.kaggle.com/danilyachmenev13',\n\n    },\n    {\n        name: 'Annija Daugaviete',\n        image: 'adaugaviete.jpg',\n        bio: 'Junior Data Scientist@Creditreform Latvija',\n        kaggle: 'https://www.kaggle.com/annijadaugaviete',\n    },\n    {\n        name: 'Edving Kronberg',\n        image: 'eauzins.jpg',\n        bio: 'Sales Manager@LASD LV',\n        kaggle: 'https://www.kaggle.com/edvinkronberg',\n    }\n]\nexport default function Members() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            {\n                MEMBERS.map(member => (\n                    <div className={classes.avatar} key={member.name}>\n                        <MemberAvatar {...member} image={`${process.env.PUBLIC_URL}/images/avatar/${member.image}`} />\n                    </div>\n                ))\n            }\n        </div>\n    )\n}","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from '@material-ui/core/Paper';\nimport {Link} from \"react-router-dom\";\nimport ButtonBase from '@material-ui/core/ButtonBase'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        paddingBottom: 10,\n    },\n    button: {\n        marginRight: 30,\n        marginBottom: 30,\n    },\n    project: {\n        minWidth: '300px',\n        maxWidth: '300px',\n        padding: '10px',\n        color: theme.palette.text.secondary,\n    },\n    dummyProject: {\n        minHeight: '438px',\n        minWidth: '300px',\n        maxWidth: '300px',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingTop: '10px',\n        color: theme.palette.text.primary,\n        background: \"transparent\",\n        border: '3px dashed #FFFFFF',\n    },\n    title: {\n        margin: '0 0 10px 0',\n        paddingTop: 0,\n    },\n    riga: {\n        width: '100%',\n        height: 400,\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/riga/rigaoldtown.jpg)`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    trafficsign: {\n        width: '100%',\n        height: 400,\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/trafficsign/5t.jpg)`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    }\n}));\n\nexport default function Projects() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <ButtonBase component={Link} to={'/riga-real-estate'} className={classes.button}>\n                <Paper elevation={3} className={classes.project}>\n                    <h3 className={classes.title}>Riga Real Estate Price Prediction</h3>\n                    <div className={classes.riga}/>\n                </Paper>\n            </ButtonBase>\n            <ButtonBase component={Link} to={'/traffic-sign'} className={classes.button}>\n                <Paper elevation={3} className={classes.project}>\n                    <h3 className={classes.title}>Traffic Sign Recognition</h3>\n                    <div className={classes.trafficsign}/>\n                </Paper>\n            </ButtonBase>\n            <ButtonBase component={Link} to={'/join-us'} className={classes.button}>\n                <Paper elevation={3} className={classes.dummyProject}>\n                    <h3 className={classes.title}>Join Us To Build Your Own</h3>\n                </Paper>\n            </ButtonBase>\n        </div>\n    );\n}","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    about: {\n      lineHeight: '16px',\n    },\n})\nexport default function About() {\n    const classes = useStyles();\n    return (\n        <>\n            <p className={classes.about}>\n                Riga Data Science Club is a non-profit organization to share ideas, experience and build machine learning projects together.\n            </p>\n            <p>\n                Our goal is building a strong data science community in Latvia to drive progress in the machine learning&artificial intelligence field.\n            </p>\n        </>\n    )\n}","import Members from \"../components/Members\";\nimport React from \"react\";\nimport Projects from \"./Projects\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport About from \"./About\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        textAlign: 'left',\n        color: theme.palette.text.primary,\n    },\n}));\nexport default function Home() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <section className={classes.homeSection}>\n                <h2>About</h2>\n                <About />\n            </section>\n            <section className={classes.homeSection}>\n                <h2>Projects</h2>\n                <Projects />\n            </section>\n        </div>\n    );\n}","import React from 'react'\nimport config from '../../config'\n\nconst Context = React.createContext(config)\n\nexport function useConfig() {\n    const context = React.useContext(Context)\n    if (!context) {\n        throw new Error('useConfig must be used within a ConfigProvider')\n    }\n    return context\n}\n\nexport default function ConfigProvider({ value, children }) {\n    return <Context.Provider value={value || config}>{children}</Context.Provider>\n}","import React from 'react'\nimport { ThemeProvider as Provider } from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core'\n\nlet theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n    palette: {\n        background: {\n            default: '#eeeeee',\n        },\n        secondary: {\n            main: '#FFFFFF',\n        },\n        text: {\n            primary: '#FFFFFF',\n            secondary: '#000000',\n        },\n    },\n});\n\nexport default function ThemeProvider({ children }) {\n    return <Provider theme={theme}>{children}</Provider>\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        color: theme.palette.text.primary,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignContent: 'center',\n        justifyItems: 'center',\n        alignItems: 'center',\n        borderBottom: '1px solid #dcdce7',\n        padding: '0 10px',\n    },\n    identity: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignContent: 'center',\n        justifyItems: 'center',\n        alignItems: 'center',\n    },\n    logo: {\n        width: 50,\n        height: 50,\n        paddingRight: 10,\n    },\n    logoDark: {\n        width: 30,\n        height: 30,\n        paddingRight: 12,\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo/ds-icon-white.png)`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'contain',\n    },\n    navigation: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignContent: 'center',\n        justifyItems: 'center',\n        alignItems: 'center',\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    return (\n        <div className={classes.header}>\n            <div className={classes.identity}>\n                <div className={classes.logoDark} />\n                <h2>Riga Data Science Club</h2>\n            </div>\n            {\n                /*\n                <div className={classes.navigation}>\n                <p>ABOUT</p>\n                <p>PROJECTS</p>\n                <p>JOIN US</p>\n            </div>\n                 */\n            }\n\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Footer() {\n    return <p>Riga Data Science Club, 2020</p>\n}","import {withStyles} from \"@material-ui/core/styles\";\nimport {FormControl} from \"@material-ui/core\";\n\nexport const RealEstateFormControl = withStyles(() => ({\n    root: {\n        minWidth: 120,\n        width: '100%',\n        textAlign: 'left',\n        marginBottom: 10,\n        padding: 0,\n    },\n}))(FormControl);","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {RealEstateFormControl} from \"./RealEstateFormControl\";\n\nconst HOUSE_SERIES = [\n    {label: 'Lietuviešu projekts', value: 'LT proj.'},\n    {label: '602. sērija', value: '602.'},\n    {label: 'Pirmskara māja', value: 'P. kara'},\n    {label: 'Jaunbūve', value: 'Jaun.'},\n    {label: 'Specprojects', value: 'Specpr.'},\n    {label: 'Hruščova laika projekts', value: 'Hrušč.'},\n    {label: '119. sērija', value: '119.'},\n    {label: 'Mazģimeņu projekts', value: 'M. ģim.'},\n    {label: 'Renovētā māja', value: 'Renov.'},\n    {label: '103. sērija', value: '103.'},\n    {label: 'Privātmāja', value: 'Priv. m.'},\n    {label: '467. sērija', value: '467.'},\n    {label: 'Staļina laika māja', value: 'Staļina'},\n    {label: '104. sērija', value: '104.'},\n    {label: 'Čehu projekts', value: 'Čehu pr.'},\n];\n\nexport function HouseSeriesSelect({value, onChange}) {\n    return (\n        <RealEstateFormControl variant='outlined'>\n            <InputLabel>House series</InputLabel>\n            <Select\n                value={value}\n                onChange={onChange}\n                label='House series'\n            >\n                {HOUSE_SERIES.map(s => <MenuItem key={s.value} value={s.value}>{s.label}</MenuItem>)}\n            </Select>\n        </RealEstateFormControl>\n    );\n}","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {RealEstateFormControl} from \"./RealEstateFormControl\";\n\nconst HOUSE_TYPES = [\n    {label: 'Kieģeļu-paneļu', value: 'Brick-Panel'},\n    {label: 'Lielpaneļu', value: 'Panel'},\n    {label: 'Koka', value: 'Wood'},\n    {label: 'Mūra', value: 'Masonry'},\n    {label: 'Kieģeļu-paneļu', value: 'Brick'},\n    {label: 'Paneļu-kieģelu', value: 'Panel-Brick'},\n]\n\nexport function HouseTypeSelect({value, onChange}) {\n    return (\n        <RealEstateFormControl variant='outlined'>\n            <InputLabel>House type</InputLabel>\n            <Select\n                value={value}\n                onChange={onChange}\n                label='House type'\n            >\n                {HOUSE_TYPES.map(t => <MenuItem key={t.value} value={t.value}>{t.label}</MenuItem>)}\n            </Select>\n        </RealEstateFormControl>\n    );\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nconst useStyles = makeStyles({\n    stepContainer: {\n        width: '100%',\n        maxWidth: '300px',\n        paddingRight: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    stepHeader: {\n        width: '100%',\n        marginLeft: '3px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignContent: 'center',\n        justifyItems: 'center',\n        alignItems: 'center',\n    },\n    stepHeaderTitle: {\n        marginLeft: '3px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    stepTitle: {\n        marginLeft: '3px',\n    },\n    stepCompleteIcon: {\n        color: props => props.complete ? '#18ac2f' : '#dddddd',\n        fontWeight: '900',\n    },\n});\n\nexport default function Step({children, icon, title, complete, hideCompleteIcon = false}) {\n    const classes = useStyles({complete});\n    return (\n        <div className={classes.stepContainer}>\n            <div className={classes.stepHeader}>\n                <div className={classes.stepHeaderTitle}>\n                    {icon}\n                    <h3 className={classes.stepTitle}>{title}</h3>\n                </div>\n                {!hideCompleteIcon && <div className={classes.stepCompleteIcon}>\n                    <CheckCircleOutlineIcon />\n                </div>}\n            </div>\n            {children}\n        </div>\n    );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\nimport {useConfig} from \"../providers/ConfigProvider\";\n\nfunction loadScript(src, position, id) {\n    if (!position) {\n        return;\n    }\n\n    const script = document.createElement('script');\n    script.setAttribute('async', '');\n    script.setAttribute('id', id);\n    script.src = src;\n    position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function GooglePlacesAutocomplete({value, setValue}) {\n    const config = useConfig();\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n    const loaded = React.useRef(false);\n    const fetchPlacePredictions = React.useMemo(\n        () =>\n            throttle((request, callback) => {\n                autocompleteService.current.getPlacePredictions(request, callback);\n            }, 200),\n        [],\n    );\n\n    React.useEffect(() => {\n        let active = true;\n\n        if (!autocompleteService.current && window.google) {\n            autocompleteService.current = new window.google.maps.places.AutocompleteService();\n        }\n        if (!autocompleteService.current) {\n            return undefined;\n        }\n        const RIGA = new window.google.maps.LatLng(config.RIGA_CENTER_LATITUDE, config.RIGA_CENTER_LONGITUDE);\n        if (inputValue === '') {\n            setOptions(value ? [value] : []);\n            return undefined;\n        }\n        const riga = new window.google.maps.Circle({ center: RIGA, radius: 12000 });\n        fetchPlacePredictions({ input: inputValue, bounds: riga.getBounds(), strictbounds: true, types: ['address'], language: 'lv'}, (results) => {\n            if (active) {\n                let newOptions = [];\n\n                if (value) {\n                    newOptions = [value];\n                }\n\n                if (results) {\n                    newOptions = [...newOptions, ...results];\n                }\n\n                setOptions(newOptions);\n            }\n        });\n\n        return () => {\n            active = false;\n        };\n    }, [value, inputValue, fetchPlacePredictions]);\n\n    return (\n        <Autocomplete\n            id=\"google-map-demo\"\n            fullWidth\n            getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n            filterOptions={(x) => x}\n            options={options}\n            autoComplete\n            includeInputInList\n            filterSelectedOptions\n            noOptionsText={\"Start typing...\"}\n            value={value}\n            onChange={(event, newValue) => {\n                setOptions(newValue ? [newValue, ...options] : options);\n                setValue(newValue);\n            }}\n            onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n            }}\n            renderInput={(params) => (\n                <TextField {...params} label=\"Please enter the address\" variant=\"outlined\" fullWidth />\n            )}\n            renderOption={(option) => {\n                const matches = option.structured_formatting.main_text_matched_substrings;\n                const parts = parse(\n                    option.structured_formatting.main_text,\n                    matches.map((match) => [match.offset, match.offset + match.length]),\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                  {part.text}\n                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.structured_formatting.secondary_text}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}","import GooglePlacesAutocomplete from \"../../../components/realestate/GooglePlacesAutocomplete\";\nimport Button from '@material-ui/core/Button';\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useConfig} from \"../../../components/providers/ConfigProvider\";\nimport throttle from \"lodash/throttle\";\n\nconst useStyles = makeStyles(() => ({\n    locationContainer: {\n        width: '100%',\n        textAlign: 'center',\n    },\n    locationButton: {\n        marginTop: '10px',\n    },\n}));\n\nconst placesService = { current: null };\n\n/**\n * @param onChange callback will be invoked with {latitude, latitude} once location selected\n * @returns {latitude, latitude}\n * @constructor\n */\nexport default function EnterLocation({location, setLocation, map}) {\n    const config = useConfig();\n    const classes = useStyles({location, config});\n    const [canUseGeolocation, setCanUseGeolocation] = useState(false);\n    const [place, setPlace] = useState(null);\n    const [photoReference, setPhotoReference] = useState(null);\n\n    React.useEffect(() => {\n        if (navigator.geolocation) {\n            setCanUseGeolocation(true);\n        }\n    }, [canUseGeolocation, setCanUseGeolocation]);\n\n    const fetchPlaceDetails= React.useMemo(\n        () =>\n            throttle((request, callback) => {\n                placesService.current.getDetails(request, callback);\n            }, 200),\n        [],\n    );\n\n    React.useEffect(() => {\n        if (!placesService.current && window.google && map) {\n            placesService.current = new window.google.maps.places.PlacesService(map);\n        }\n        if (!placesService.current) {\n            return undefined;\n        }\n        if(place) {\n            fetchPlaceDetails({placeId: place.place_id, fields: ['geometry']}, (place, status) => {\n                if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n                    const latitude = place.geometry.location.lat();\n                    const longitude = place.geometry.location.lng();\n                    setLocation({latitude, longitude});\n                }\n            });\n        }\n    }, [map, place, fetchPlaceDetails]);\n\n    function getGeolocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(onPositionObtained);\n        } else {\n            console.error(\"Geolocation is not supported by this browser.\");\n        }\n    }\n\n    function formatCoordinates(coordinate) {\n        return Math.round(coordinate * 1e6) / 1e6;\n    }\n    function onPositionObtained(position) {\n        setPlace(null);\n        setLocation(position.coords); // {latitude, latitude}\n    }\n\n    return (<div className={classes.locationContainer}>\n        <GooglePlacesAutocomplete\n            value={place}\n            setValue={place => {\n                setPlace(place);\n            }} />\n        {canUseGeolocation && <><span style={{margin: '2px 0', fontSize: '12px'}}>or</span><Button\n            className={classes.locationButton}\n            variant=\"contained\"\n            color=\"default\"\n            size={\"large\"}\n            fullWidth\n            onClick={getGeolocation}>Use device location\n        </Button></>}\n        {(location && location.latitude && location.longitude)&&<p>{formatCoordinates(location.latitude)}° N, {formatCoordinates(location.longitude)}° E</p>}\n    </div>)\n\n}","import React, {createRef, useEffect, useRef, useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useConfig} from \"../../components/providers/ConfigProvider\";\n\nconst useStyles = makeStyles({\n    map: {\n        width: '100%',\n        height: '300px',\n    },\n});\n\nexport default function RigaRealEstateMap({map, setMap, location, setLocation}) {\n    const classes = useStyles();\n    const config = useConfig();\n    const googleMapRef = createRef();\n    const markersRef = useRef([]);\n\n    React.useEffect(() => {\n        if(window.google) {\n            setMap(new window.google.maps.Map(googleMapRef.current, {\n                center: {lat: config.RIGA_CENTER_LATITUDE, lng: config.RIGA_CENTER_LONGITUDE},\n                zoom: 15,\n                fullscreenControl: false,\n                streetViewControl: false,\n                mapTypeControl: false,\n            }));\n        }\n    }, [setMap, config.RIGA_CENTER_LATITUDE, config.RIGA_CENTER_LONGITUDE]);\n\n    function clearMarkers(markers) {\n        for (let m of markers) {\n            m.setMap(null);\n        }\n    }\n    React.useEffect(() => {\n        if(location && location.latitude && location.longitude) {\n            clearMarkers(markersRef.current);\n            const marker = new window.google.maps.Marker({\n                map: map,\n                draggable: true,\n                position: {lat: location.latitude, lng: location.longitude},\n            });\n            map.panTo(marker.getPosition());\n            window.google.maps.event.addListener(marker, 'dragend', () => {\n                const latitude = marker.getPosition().lat();\n                const longitude = marker.getPosition().lng();\n                setLocation({latitude, longitude});\n            });\n            markersRef.current.push(marker);\n        }\n    }, [location, setLocation]);\n    return (\n        <div ref={googleMapRef} className={classes.map}/>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport {HouseSeriesSelect} from \"../../components/realestate/HouseSeriesSelect\";\nimport {HouseTypeSelect} from \"../../components/realestate/HouseTypeSelect\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Step from \"../../components/realestate/Step\";\nimport EnterLocation from \"./demo/EnterLocation\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Typography from '@material-ui/core/Typography';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FormatLineSpacingIcon from '@material-ui/icons/FormatLineSpacing';\nimport EuroSharpIcon from '@material-ui/icons/EuroSharp';\nimport {RealEstateFormControl} from \"../../components/realestate/RealEstateFormControl\";\nimport RigaRealEstateMap from \"./RigaRealEstateMap\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n    },\n    header : {\n        textAlign: 'left',\n    },\n    controls: {\n        width: '100%',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    textField: {\n        width: '100%',\n        margin: 0,\n    },\n    predictions: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    prediction: {\n        width: '100%',\n        margin: '15px',\n        textAlign: 'center',\n    },\n    ai: {\n        margin: '8px',\n        width: '80px',\n        height: '80px',\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/avatar/ai.png)`,\n        backgroundSize: \"contain\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n    }\n}));\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'EUR',\n});\n\nexport default function RigaRealEstateDemo() {\n    const classes = useStyles();\n    const [map, setMap] = useState(null);\n    const [place, setPlace] = useState(2);\n    const [location, setLocation] = useState(null);\n    const [area, setArea] = useState(50);\n    const [floor, setFloor] = useState(5);\n    const [rooms, setRooms] = useState(2);\n    const [totalFloors, setTotalFloors] = useState(9);\n    const [condition, setCondition] = useState('All, amenities');\n    const [houseType, setHouseType] = useState('Panel');\n    const [houseSeria, setHouseSeria] = useState('119.');\n    const [district, setDistrict] = useState('Purvciems');\n    const [loading, setLoading] = useState(false);\n    const [predictions, setPredictions] = useState(null);\n\n    const allFieldsAreComplete = () => {\n        return area && floor && rooms && totalFloors\n            && condition && houseType && houseSeria && district\n            && location && location.latitude && location.longitude;\n    }\n\n    const createInputInstance = operation => ({\n        'op_type': [operation],\n        'district': [district],\n        'street': [''],\n        'rooms': [rooms],\n        'area': [area],\n        'floor': [floor],\n        'total_floors': [totalFloors],\n        'house_seria': [houseSeria],\n        'house_type': [houseType],\n        'condition': [condition],\n        'lat': [location.latitude],\n        'lon': [location.longitude],\n    });\n\n    useEffect(() => {\n        if(allFieldsAreComplete()) {\n            setLoading(true);\n            setPredictions(null);\n            fetch(\"http://35.189.254.202:8501/v1/models/riga:predict\", {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        instances: [\n                            createInputInstance('For sale'),\n                            createInputInstance('For rent'),\n                        ]\n                    }),\n                }\n            )\n                .then(res => res.json())\n                .then(result => {\n                    setPredictions(result.predictions);\n                    setLoading(false);\n                })\n                .catch(error => {\n                    console.log(error);\n                    setLoading(false);\n                });\n        }\n    }, [area, floor, rooms, totalFloors, condition, houseType, houseSeria, district, location,\n        setPredictions]);\n\n    const photoReference = '';\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                    Complete few fields below to get rent and sale price estimation for any property located in Riga, Latvia:\n                </Typography>\n            </div>\n            {/*<RigaRealEstateMap map={map} setMap={setMap} location={location} setLocation={setLocation} />*/}\n            <div className={classes.controls}>\n                <Step icon={<LocationOnIcon/>} title={'Real estate location'} complete={location}>\n                    <EnterLocation map={map} location={location} setLocation={setLocation} />\n                </Step>\n                {place && <Step icon={<HomeIcon/>} title={\"House properties\"} complete={houseSeria && houseType && totalFloors}>\n                    <HouseSeriesSelect value={houseSeria} onChange={event => setHouseSeria(event.target.value)} />\n                    <HouseTypeSelect value={houseType} onChange={event => setHouseType(event.target.value)} />\n                    <RealEstateFormControl>\n                        <TextField\n                            className={classes.textField}\n                            label=\"Floor count\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            value={totalFloors.toString()}\n                            onChange={event => setTotalFloors(parseInt(event.target.value))}\n                        />\n                    </RealEstateFormControl>\n                </Step>}\n                {place && <Step icon={<FormatLineSpacingIcon />} title={\"Flat properties\"} complete={floor && area && rooms}>\n                    <RealEstateFormControl variant='outlined'>\n                        <TextField\n                            className={classes.textField}\n                            label=\"Floor\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            value={floor.toString()}\n                            onChange={event => setFloor(parseInt(event.target.value))}\n                        />\n                    </RealEstateFormControl>\n                    <RealEstateFormControl variant='outlined'>\n                        <TextField\n                            className={classes.textField}\n                            label=\"Area\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            value={area.toString()}\n                            onChange={event => setArea(parseInt(event.target.value))}\n                        />\n                    </RealEstateFormControl>\n                    <RealEstateFormControl variant='outlined'>\n                        <TextField\n                            className={classes.textField}\n                            label=\"Room count\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            value={rooms.toString()}\n                            onChange={event => setRooms(parseInt(event.target.value))}\n                        />\n                    </RealEstateFormControl>\n                </Step>}\n                {/*<DistrictAutocomplete value={district} onChange={(_event, value)=> setDistrict(value)} />*/}\n                {/*<ConditionSelect value={condition} onChange={event => setCondition(event.target.value)} />*/}\n                {<Step icon={<EuroSharpIcon />} title={\"Prediction\"} hideCompleteIcon>\n                    {loading && <CircularProgress />}\n                    {predictions && <div className={classes.predictions}>\n                        <div className={classes.prediction}>\n                            For sale:\n                            <h2 style={{margin: 3}}>{formatter.format(predictions[0][0])}</h2>\n                        </div>\n                        <div className={classes.prediction}>\n                            For rent:\n                            <h2 style={{margin: 3}}>{formatter.format(predictions[1][0])}</h2>\n                        </div>\n                    </div>}\n                </Step>}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function RigaRealEstateApi() {\n    return (\n        <Typography component=\"div\" align={\"left\"}>\n            <h2>HTTP POST endpoint</h2>\n            <p>http://35.189.254.202:8501/v1/models/riga:predict</p>\n            <h2>Request body</h2>\n            <Box fontFamily=\"Monospace\" fontSize=\"h6.fontSize\" m={1}>\n                {JSON.stringify({\n                    \"instances\": [\n                        {\n                            \"op_type\": [\"For sale\"],\n                            \"district\": [\"Teika\"],\n                            \"street\": [\"\"],\n                            \"rooms\": [1],\n                            \"area\": [38.3],\n                            \"floor\": [3],\n                            \"total_floors\": [3],\n                            \"house_seria\": [\"Staļina\"],\n                            \"house_type\": [\"Brick\"],\n                            \"condition\": [\"All amenities\"],\n                            \"lat\": [56.967406],\n                            \"lon\": [24.186564]\n                        },\n                        {\n                            \"op_type\": [\"For rent\"],\n                            \"district\": [\"Teika\"],\n                            \"street\": [\"\"],\n                            \"rooms\": [1],\n                            \"area\": [38.3],\n                            \"floor\": [3],\n                            \"total_floors\": [3],\n                            \"house_seria\": [\"Staļina\"],\n                            \"house_type\": [\"Brick\"],\n                            \"condition\": [\"All amenities\"],\n                            \"lat\": [56.967406],\n                            \"lon\": [24.186564]\n                        }\n                    ]\n                })}\n            </Box>\n        </Typography>\n    )\n\n}","import React from 'react';\nimport SvgKaggleMark from \"../../components/svg/SvgKaggleMark\";\nimport Link from '@material-ui/core/Link';\nimport {makeStyles} from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        display: \"flex\",\n        alignItems: 'center',\n        alignContent: 'center',\n        width: '100%',\n    },\n    icon: {\n        width: 20,\n        height: 20,\n        margin: '0 5px 6px 3px',\n    },\n}));\n\nexport default function RigaRealEstateHow() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} href=\"https://www.kaggle.com/trolukovich/riga-real-estate-dataset\">\n                <div className={classes.icon}>\n                    <SvgKaggleMark />\n                </div>\n                Original Riga real estate dataset\n            </Link>\n            <Link className={classes.link} href=\"https://www.kaggle.com/dmitryyemelyanov/riga-real-estate-data-cleaning-riga-ds-club\">\n                <div className={classes.icon}>\n                    <SvgKaggleMark />\n                </div>\n                Data cleaning step-by-step\n            </Link>\n            <Link className={classes.link} href=\"https://www.kaggle.com/dmitryyemelyanov/riga-real-estate-dataset-cleaned\">\n                <div className={classes.icon}>\n                    <SvgKaggleMark />\n                </div>\n                Cleaned Riga real estate dataset\n            </Link>\n            <Link className={classes.link} href=\"https://www.kaggle.com/dmitryyemelyanov/riga-real-estate-price-prediction-with-tensorflow\">\n                <div className={classes.icon}>\n                    <SvgKaggleMark />\n                </div>\n                TensorFlow model design step-by-step\n            </Link>\n        </div>\n    );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nimport RigaRealEstateDemo from \"./RigaRealEstateDemo\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RigaRealEstateApi from \"./RigaRealEstateApi\";\nimport RigaRealEstateHow from \"./RigaRealEstateHow\";\n\nconst useStyles = makeStyles({\n    projectContainer: {\n        maxWidth: '1320px',\n    },\n    header: {\n        width: '100%',\n        marginLeft: '10px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'no-wrap'\n    },\n    title: {\n        textAlign: 'left',\n    },\n    titleHeader: {\n        margin: '8px 0 4px 0',\n    },\n    project: {\n    },\n    riga: {\n        margin: '8px',\n        width: '80px',\n        height: '80px',\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo/riga-horizontal.png)`,\n        backgroundSize: \"contain\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n    },\n    ai: {\n        margin: '8px',\n        width: '80px',\n        height: '80px',\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/avatar/ai.png)`,\n        backgroundSize: \"contain\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n    }\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nexport default function RigaRealEstateProject() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div className={classes.project}>\n            <div className={classes.header}>\n                <div className={classes.riga}/>\n                <div className={classes.title}>\n                    <h3 className={classes.titleHeader}>Riga real estate price prediction</h3>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                        Machine learning solution that suggests real estate sale and rent price\n                    </Typography>\n                </div>\n            </div>\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"demo\" />\n                    <Tab label=\"how it is made\" />\n                    <Tab label=\"public Api\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <RigaRealEstateDemo />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <RigaRealEstateHow />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <RigaRealEstateApi />\n            </TabPanel>\n        </div>\n    );\n}","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Home from \"./views/Home\";\nimport About from \"./views/About\";\nimport ConfigProvider from \"./components/providers/ConfigProvider\";\nimport ThemeProvider from \"./components/providers/ThemeProvider\";\nimport Header from \"./views/Header\";\nimport Footer from \"./views/Footer\";\nimport Members from \"./components/Members\";\nimport RigaRealEstateProject from \"./views/realestate/RigaRealEstateProject\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        /*background: `linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),\n                    linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),\n                    linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%);`,*/\n    },\n    container: {\n        margin: '0 auto',\n        padding: '20px 20px',\n        maxWidth: '1470px',\n        textAlign: 'center',\n        color: theme.palette.text.primary,\n    },\n    footer: {\n\n    },\n    background: {\n        backgroundColor: \"#363636\",\n        /*background: `linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),\n            linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),\n            linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%);`,*/\n    },\n    homeSection: {\n        paddingBottom: '20px',\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <ThemeProvider>\n            <ConfigProvider>\n                <Router>\n                    <div className={classes.root}>\n                        <div className={classes.background}>\n                            <div className={classes.container}>\n                                <Header />\n                                <Switch>\n                                    <Route path=\"/\">\n                                        <Home />\n                                    </Route>\n                                    <Route path=\"/riga\">\n                                        <RigaRealEstateProject />\n                                    </Route>\n                                </Switch>\n                            </div>\n                        </div>\n                        <div className={classes.container}>\n                            <section className={classes.homeSection}>\n                                <h2>Members</h2>\n                                <Members />\n                            </section>\n                        </div>\n                        <div className={classes.container}>\n                            <Footer />\n                        </div>\n                    </div>\n                </Router>\n            </ConfigProvider>\n        </ThemeProvider>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./prod')\n} else {\n  module.exports = require('./dev')\n}\n"],"sourceRoot":""}